# Builder package configuration file for MRMS
# Robert Toomey
# You can create multiple and pass to the build.py, for example:
# ./build.py myconfig1.cfg
# 'Empty' fields are usually prompted if needed by the script,
# for example, GUI= will ask you interactively, while GUI=no will not.
#
# If I've commented it out, it isn't supported yet in this build 

# VERSION=mrms20   MRMS 2020 Corona Edition
# VERSION=mrms12   Older packages, builds orpginfr among others
VERSION=mrms20

# 
RAPIO=yes

# SVN username for checkouts, blank prompts.  You could put your user id here to avoid it asking you
# Use a . for username if you want an anonymous checkout.  This will be a read only/update checkout
# where you don't plan to ever commit new code to the repository.
USERNAME=
# SVN password for checkouts, blank prompts. 
# Not a good idea to store it, but I could see a need in rare cases, say you want to build multiple
# times over and over without any prompts like I have to do when testing this thing.
PASSWORD=

##########################################################################
# Optional yes/no options for building.  yes, no or blank for prompt
# Do we ask about advanced options/tools? This will have the interactive tools/etc.
# I'm removing this for the moment...I do like the idea of tools/etc. in the package
# ADVANCED=no

# Targeted directory
# {blank}: Prompt for file location
TARGET=
# Do we try to checkout code from the SVN repository? yes, no or blank for prompt
CHECKOUT=no
# Mode to use for checkout
# SVN         : Use NSSL SVN repository
# {gitpath}   : Git pull location string for pulling NSSL code
CHECKFROM=SVN
#CHECKFROM=--branch MRMSV12 ssh://Karen.Cooper@vlab.ncep.noaa.gov:29418/mrms-ncep

##########################################################################
# Subpackage flags

# Do we build all third party packages?  yes, no or blank for prompt
THIRDPARTY=yes
# Do we build WDSS2 packages?  yes, no or blank for prompt
WDSS2=no
# Do we build the wg GUI?  yes, no, auto, or blank for prompt.  Will not ask if WDSS2 is no. 
# auto: Look for gl.h and gtkglext-devel rpm and then build if found
GUI=auto
# WG2 java display autopulled and built from github.  Requires java and ant 1.9 or greater.
GUI2=no
# Do we build hydro packages after wdssii?  yes, no or blank for prompt.  Will not ask if WDSS2 is no
HYDRO=no
# Do we build hydro fortran stuff? yes, no or blank for prompt. Will not ask if HYDRO is no
HYDROFORTRAN=no

##########################################################################
# C++11 and up settings
# Do we build BOOST library?  MRMS20 and up this always builds 
BOOST=yes
# Do we build GDAL library?  Some situations can get away without it.  WDSS2 requires this and HMET
GDAL=yes
# Do we build python linking? This will allow code/algorithms to be called from python
# auto: Look for python-devel rpm which is standard redhat package for Python.h
# Note: not yet implemented
PYTHONDEV=no

# Packaging settings
# PACKAGE=           : Build as usual, same as NONE
# PACKAGE=NONE       : Build as usual
# PACKAGE=SOURCETAR  : Build a tar.gz with everything in it needed to copy and build on another system
#                      where you don't have access to svn (such as HWT).
#                      Note that missing rpms, etc. on remote system could still stop the build
#                      and would have be installed by IT
# PACKAGE=REMOTE     : Build from a remote source package already prepared. This is usually set in
#                      a package built with the SOURCETAR option above
PACKAGE=NONE

##########################################################################
# Advanced tweaks
#

##########################################################################
# Location of WDSS2 authentication file. 
# NONE: Don't use one at all.  Great for development
# WDSS2: Guess key file from other options and get from w2/w2config/auth directory
# {Hardpath}: Use this key file
# {blank}: Prompt for absolute file location.  Usually just annoying.
KEYFILE=WDSS2

##########################################################################
# 'Export' flag for making a non-US build
EXPORT=no

##########################################################################
# 'Research' flag for making a research build (no realtime allowed, no encryption)
RESEARCH=no

# EXPIRE setting? Set if this build expires.  Doesn't have prompt ability
# {blank}: Never expire
# {YYYY-MM-DD}: Date to expire on
# {integer}: Seconds from build date until expire
# EXPIRE= ,EXPIRE=2020-01-01, EXPIRE=31536000
# An explicit non-blank setting will override any authentication file
EXPIRE=

# Revision setting.  This is used for SVN checkouts to specify a date or revision
# for checking out code.  See the --revision flag for svn for all abilities for this  
# HEAD --> Current revision...normal stuff for development
#          Note below the {'s are literal in this case
# REVISION={2018-02-19} --> check out revision as of midnight Feb 19 (so probably up2date as of the 18th) 
REVISION=HEAD

# Optimized setting? Lak's spammed like 8 flags here..need to look at it more
#OPTIMIZED=yes
# Make --jobs value: CPU, max count or blank for full throttle
JOBS=CPU

# WG2 git SHA stamp.  Blank for prompt, master for lastest.  c997377 for worldwind before mass changes
GUI2GIT=master
